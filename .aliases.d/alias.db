### Databricks
alias awsc='aws --profile aws-cust-test1_databricks-power-user'
alias databricksaz='databricks --profile azure'
alias databrickse2='databricks --profile e2'
alias databricksg='databricks --profile genie'
alias dbfsaz='dbfs --profile azure'
alias dbfse2='dbfs --profile e2'
alias dbfsg='dbfs --profile genie'
add_genie_cfg() {
    if [[ $# -lt 2 ]] ; then
        echo "$FUNCNAME host token [generate-postman-config (true|false)]" && return 1
    else
        genie_host="https://${1}"
        genie_token=${2}
        curr_host=$(grep -A1 genie $HOME/.databrickscfg | awk '/host/ {print $NF}')
        curr_token=$(grep -A2 genie $HOME/.databrickscfg | awk '/token/ {print $NF}')
        sed -i.bak "s,${curr_host},${genie_host},g;s,${curr_token},${genie_token},g" $HOME/.databrickscfg
        if [[ "xtrue" == "x${3}" ]] ; then
            postman_id=$(uuidgen | tr 'A-Z' 'a-z')
            cat >> $HOME/Downloads/genie.postman_env.json <<EOF
{
 "id": "${postman_id}",
 "name": "genie",
 "values": [
  {
   "key": "host",
   "value": "${1}",
   "enabled": true
  },
  {
   "key": "token",
   "value": "${2}",
   "enabled": true,
   "type": secret
  }
 ],
 "_postman_variable_scope": "environment"
}
EOF
            echo "Import $HOME/Downloads/genie.postman_env.json to Postman"
        fi
    fi
}
convert_logs() {
    if [[ $# -lt 1 ]] ; then
        echo "$FUNCNAME csv_file [..]" && return 1
    else
        while [[ -n "${1}" ]] ; do
            c=${1}
            if [[ -e ${c} && ${c: -4} == ".csv" ]] ; then
                l=$(basename ${c} .csv).log
                cat ${c} | cut -d, -f2- | gsed 's/^\"//;s/\"$//;s/\"\"/\"/g' > ${l}
                gsed -i '1d;/^$/d' ${l}
                echo "Converted to ${l}"
            else
                echo "${c} must exist and be a CSV file" && return 1
            fi
            shift
        done
    fi
}
gen_trace() {
    echo "0$((${RANDOM}%2))-$(uuidgen | tr -d '-')-$(uuidgen | tr -d '-' | cut -c1-16)-0$((${RANDOM}%2))" | tr '[A-Z]' '[a-z]'
}
get_workspace_urls() {
    [[ $# -ne 1 ]] && echo "$FUNCNAME workspace_id [..]" && return 1
    while [[ -n "${1}" ]] ; do
        o=${1}
        new="adb-${o}.$(( ${o} % 20 )).azuredatabricks.net"
        c=$(host ${new} | tail -1 | awk '{print $1}')
        echo "Workspace ID: ${o}"
        echo "New URL: https://${new}"
        echo "Old URL: https://${c}/?o=${o}"
        echo "Version: $(curl -s https://${new}/version | grep branch | gsed 's/<[^>]\+>//g;s/^[ \t]*//g')"
        shift
    done
}
