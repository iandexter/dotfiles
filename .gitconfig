[user]
    name = Ian Dexter D Marquez
    email = 79125+iandexter@users.noreply.github.com.x 
    logallrefupdates = true
    signingkey = 126A3EDFFB6E402E
[core]
    excludesfile = /Users/iandexter/.gitignore
    editor = vim
    fsmonitor = true
    untrackedcache = true
[alias]
    ba = branch --all
    bd = branch --delete --force
    ca = config --get-regexp '^alias\\.'
    cb = checkout -b
    ci = commit # -sS
    co = checkout
    fp = fetch --prune origin
    fr = "!f() { main=${1:-main} ; git fetch origin ${main} && git rebase origin/${main} ; } ; f"
    fu = "!f() { main=${1:-main} ; git fetch upstream && git checkout ${main} && git merge upstream/${main} ; } ; f"
    ld = log --pretty=format:\"%ad %C(yellow)%h %Cred%d %Creset%s%Cblue [%cn]\" --decorate --date=relative
    lo = log --oneline --decorate
    lg = log --graph --decorate --pretty=oneline --abbrev-commit
    lp = log --graph --abbrev-commit --decorate --all --format=format:\"%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(dim white) - %an%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n %C(white)%s%C(reset)\"
    mf = merge --no-ff
    pb = push --set-upstream origin
    pm = !git remote | xargs -I % git push --no-verify --set-upstream %
    rv = remote --verbose
    sf = diff-tree --no-commit-id --name-status -r
    sp = show --pretty=oneline --abbrev-commit
    ss = status --short --branch
    st = status
    up = "!f() { main=${1:-master} ; git remote update && git checkout \"${main}\" && git pull --rebase --prune ; } ; f"
    pp = "!bash -c \"new_args=(); remote=\\\"\\\"; ref=\\\"\\\"; start=0; if [[ \\$0 == \\\"bash\\\" ]]; then start=1; fi; for ((i=start; i<=\\$#; i++)); do arg=\\${!i}; if [[ \\\"\\$arg\\\" != -* ]]; then if [[ \\\"\\$remote\\\" == \\\"\\\" ]]; then remote=\\\"\\$arg\\\"; new_args+=(\\\"\\$arg\\\"); else if [[ \\$ref == \\\"\\\" ]]; then ref=\\\"\\$arg\\\"; fi; if [[ \\\"\\$ref\\\" != ian-marquez_data/* ]]; then new_args+=(\\\"\\$arg:ian-marquez_data/\\$arg\\\"); else new_args+=(\\\"\\$arg\\\"); fi; fi; else new_args+=(\\\"\\$arg\\\"); fi; done; if [[ \\$remote == \\\"\\\" ]]; then new_args+=(\\\"origin\\\"); fi; if [[ \\$ref == \\\"\\\" ]]; then branch=\\$(git branch --show-current); if [[ \\\"\\$branch\\\" != ian-marquez_data/* ]]; then new_args+=(\\\"\\$branch:ian-marquez_data/\\$branch\\\"); else new_args+=(\\\"\\$branch\\\"); fi; fi; git push -u \\\"\\${new_args[@]}\\\"\" "
[color]
    branch = auto
    diff = auto
    interactive = auto
    status = auto
    ui = auto
[format]
    pretty = oneline
[push]
    default = simple
[diff]
    mnemonicprefix = true
[branch]
    autosetupmerge = true
[merge]
    stat = true
[pull]
    rebase = true
[gpg]
    program = gpg
[commit]
    # gpgsign = true
[init]
    ### templateDir = ~/projects/compareglobal/git-template
[secrets]
    providers = git secrets --aws-provider
    patterns = [A-Z0-9]{20}
    patterns = (\"|')?(AWS|aws|Aws)?_?(SECRET|secret|Secret)?_?(ACCESS|access|Access)?_?(KEY|key|Key)(\"|')?\\s*(:|=>|=)\\s*(\"|')?[A-Za-z0-9/\\+=]{40}(\"|')?
    patterns = (\"|')?(AWS|aws|Aws)?_?(ACCOUNT|account|Account)_?(ID|id|Id)?(\"|')?\\s*(:|=>|=)\\s*(\"|')?[0-9]{4}\\-?[0-9]{4}\\-?[0-9]{4}(\"|')?
    allowed = AKIAIOSFODNN7EXAMPLE
    allowed = wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
    allowed = aws_account_id:\\s\\d+
    patterns = (api|API|hmac)[kK]ey
    patterns = .*([pP]ass|token).*(:|=)
    patterns = [0-9a-fA-F]{32,48}
[url "git@github.com:"]
    insteadOf = https://github.com/
